name: Release
on:
  pull_request:
    branches:
      - master
    types:
      - closed

permissions:
  contents: write # needed for creating releases

jobs:
  release:
    if: ${{ github.repository_owner == 'your-ehsan' && github.event.pull_request.merged}}
    name: Create a release
    runs-on: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get the latest tag from development
        id: get_tag
        shell: bash
        run: |
          LATEST_TAG=$(git tag --sort=-creatordate | head -n 1)
          if [[ -z "$LATEST_TAG" ]]; then
            echo "No tag found. Skipping release."
            exit 1
          fi
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        id: pnpm_cache_path
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm_cache_path.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        env:
          ELECTRON_BUILDER_ALLOWED_EXECUTABLES: '*'
        run: pnpm build:win

      - name: Verify Build Output
        shell: bash
        run: |
          if [[ -z $(find dist -type f -name "*.exe") ]]; then
            echo "Build output not found! Skipping release."
            exit 1
          fi
          echo "Build output found!"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.exe
            dist/latest.yml
          body_path: CHANGELOG.md
          tag_name: ${{ steps.get_tag.outputs.LATEST_TAG }}
          draft: false
          generate_release_notes: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
